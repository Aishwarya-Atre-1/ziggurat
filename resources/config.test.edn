{:ziggurat {:app-name             "lambda_service"
            :env                  [:dev :keyword]
            :nrepl-server         {:port [7011 :int]}
            :stream-config        {:application-id       "lambda-service-test-02"
                                   :bootstrap-servers    "localhost:9092"
                                   :stream-threads-count [1 :int]
                                   :origin-topic         ".*-booking-log"}
            :proto-class          "com.gojek.esb.booking.BookingLogMessage"
            :datadog              {:host    "localhost"
                                   :port    [8125 :int]
                                   :enabled [false :bool]}
            :sentry               {:enabled                   [false :bool]
                                   :dsn                       "dummy"
                                   :worker-count              [10 :int]
                                   :queue-size                [10 :int]
                                   :thread-termination-wait-s [1 :int]}
            :rabbit-mq-connection {:host            "localhost"
                                   :port            [5672 :int]
                                   :prefetch-count  [3 :int]
                                   :username        "gojek"
                                   :password        "password"
                                   :channel-timeout [2000 :int]}
            :jobs                 {:instant {:worker-count   [4 :int]
                                             :prefetch-count [4 :int]}}
            :rabbit-mq            {:delay       {:queue-name           "lambda_service_delay_queue_test"
                                                 :exchange-name        "lambda_service_delay_exchange_test"
                                                 :dead-letter-exchange "lambda_service_instant_exchange_test"
                                                 :queue-timeout-ms     [100 :int]}
                                   :instant     {:queue-name    "lambda_service_instant_queue_test"
                                                 :exchange-name "lambda_service_instant_exchange_test"}
                                   :dead-letter {:queue-name    "lambda_service_dead_letter_queue_test"
                                                 :exchange-name "lambda_service_dead_letter_exchange_test"}}
            :retry                {:count   [5 :int]
                                   :enabled [true :bool]}
            :http-server          {:port         [8010 :int]
                                   :thread-count [100 :int]}}}
